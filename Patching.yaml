---
- name: Patching the servers
  hosts: all
  become: yes
  become_method: sudo
  become_user: root
  vars: 
    - hold: "yes"
    - unhold: "no"
  tasks:
  - name: Need to delete the cache file before proceeding for Patching
    file:
      path: /var/cache # required. Path to the file being managed.
      state: absent 
  - name: Play for getting the file name containg the proxy details
    find:
      paths: /etc/profile.d
      recurse: yes
      file_type: file
    register: found_files 
    when: ansible_host == '172.17.60.137'

  - name: comment out the specific lines in the file
    lineinfile:
      path: "{{ item.path }}"
      backup: yes
      regexp: '(export http_proxy=http://172.23.37.4:8080)'
      line: '#\1'
      backrefs: yes
    loop: "{{ found_files.files }}"
    when: ansible_host == '172.17.60.137'

  - name: comment out the specific lines in the file
    lineinfile:
      path: "{{ item.path }}"
      backup: yes
      regexp: '(export https_proxy=http://172.23.37.4:8080)'
      line: '#\1'
      backrefs: yes
    loop: "{{ found_files.files }}"
    when: ansible_host == '172.17.60.137'

  
  - name: Re-Registering the centos 7 servers to foreman
    redhat_subscription:
        state: present
        activationkey: "CentOS 7 NON PROD"
        org_id: "ReBIT"
        force_register : yes
    when:  ansible_distribution == 'CentOS'

  - name: Re-Registering the Rocky linux 8 servers to foreman
    redhat_subscription:
        state: present
        activationkey: "Rocky Linux 8"
        org_id: "ReBIT"
        force_register : yes
    when:  ansible_distribution == 'Rocky'
  
  - name: check the GUI is installed on the ubuntu server
    command: dpkg-query --show xorg
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'
    register: dpkg_query_result

    
  - name: Re-Registering the ubuntu desktop to foreman
    redhat_subscription:
        state: present
        activationkey: "Ubuntu 20.04 Development Desktop"
        org_id: "ReBIT"
        force_register : yes
    when:  ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04' and dpkg_query_result.rc == 0

  - name: Re-Registering the ubuntu servers to foreman
    redhat_subscription:
        state: present
        activationkey: "ubuntu2004server_nonprod"
        org_id: "ReBIT"
        force_register : yes
    when:  ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04' and dpkg_query_result.rc != 0
  
  - name: To hold the kernel pacthing for ubuntu
    shell: apt-mark hold $(uname -r)
    when:  ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04' and hold == "yes"
  
  - name: To hold the kernel pacthing for ubuntu
    shell: sudo apt-mark unhold $(apt-mark showhold)
    when:  ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04' and unhold== "yes"
  
  - name: Find all files in the directory
    find:
        paths: /etc/yum.repos.d/
        file_type: file
    register: found_files
    when: (ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7') or
            (ansible_distribution == 'Rocky' and ansible_distribution_major_version == '8')

  - name: Move files except redhat.repo
    command: mv -f "{{ item.path }}" "/etc/yum.repos.d/old_repo/{{ item.path | basename }}"
    when: (item.path != "/etc/yum.repos.d/redhat.repo") and
            ((ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7') or
            (ansible_distribution == 'Rocky' and ansible_distribution_major_version == '8'))
    with_items: "{{ found_files.files }}"
  

  - name: Update APT package cache for ubuntu bases system
    apt:
        update_cache: yes
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'
  
  - name: Upgrade all packages of ubuntu 20.04 system
    apt:
      name: "*"
      state: latest
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '20.04'
  
  - name: Upgrade all packages of ubuntu 18.04 system
    apt:
      name: "*"
      state: latest
    when: ansible_distribution == 'Ubuntu' and ansible_distribution_version == '18.04'

  - name: Remove the unwanted packages installed on ubuntu servers 
    apt:
      autoclean: true
      autoremove: true
    when: ansible_distribution == 'Ubuntu' 

  - name: Update CentOS 7 package 
    yum:
        name: '*'
        state: latest
        disable_gpg_check: yes
        skip_broken: yes
        update_cache: yes
    when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'

  - name: Update Rocky 8 package
    yum:
        name: '*'
        state: latest
        disable_gpg_check: yes
        skip_broken: yes
        update_cache: yes
    when: ansible_distribution == 'Rocky' and ansible_distribution_major_version == '8'

  - name:: Update Red Hat 8 Servers
    redhat_subscription:
      state: present 
      username:  rajkumar.madnoli 
      password:  xxxxxxxxxx 
    when: ansible_distribution == "RedHat" and ansible_distribution_major_version == '8' and ansible_host != "172.17.49.173" and ansible_host != "172.17.49.172"  and ansible_host != "172.17.49.163" and ansible_host != "172.17.49.154"  
  
  - name: enable Required repo for the systems
    rhsm_repository:
      state: present 
      name: "{{ item  }}" 
      purge: False 
    when: ansible_distribution == "RedHat" and ansible_distribution_major_version == '8' and ansible_host != "172.17.49.173" and ansible_host != "172.17.49.172"  and ansible_host != "172.17.49.163" and ansible_host != "172.17.49.154"  
    with_items:
      - rhel-8-for-x86_64-baseos-rpms
      - codeready-builder-for-rhel-8-x86_64-rpms
      - rhel-8-for-x86_64-appstream-rpms

  - name: Update the Red Hat 8 system
    dnf:
      name: "*"
      state: latest 
      autoremove: yes 
      skip_broken: yes 
      update_cache: yes 
    when: ansible_distribution == "RedHat" and ansible_distribution_major_version == '8' and ansible_host != "172.17.49.173" and ansible_host != "172.17.49.172"  and ansible_host != "172.17.49.163" and ansible_host != "172.17.49.154"  

  - name: Check if reboot required file exist in ubuntu 
    stat:
      path: /var/run/reboot-required
    register: reboot_required_file
    when: ansible_distribution == 'Ubuntu'

  - name: Rebooting the required ubuntu systems
    reboot:
      pre_reboot_delay: 0 # not required. Seconds to wait before reboot. Passed as a parameter to the reboot command. On Linux, macOS and OpenBSD, this is converted to minutes and rounded down. If less than 60, it will be set to 0. On Solaris and FreeBSD, this will be seconds.
      post_reboot_delay: 60 # not required. Seconds to wait after the reboot command was successful before attempting to validate the system rebooted successfully. This is useful if you want wait for something to settle despite your connection already working.
      reboot_timeout: 600 # not required. Maximum seconds to wait for machine to reboot and respond to a test command. This timeout is evaluated separately for both reboot verification and test command success so the maximum execution time for the module is twice this amount.
      connect_timeout: 10 # not required. Maximum seconds to wait for a successful connection to the managed hosts before trying again. If unspecified, the default setting for the underlying connection plugin is used.
      test_command: whoami # not required. Command to run on the rebooted host and expect success from to determine the machine is ready for further tasks.
      msg: "Reboot initiated by Ansible" # not required. Message to display to users before reboot.
      search_paths: "['/sbin', '/usr/sbin', '/usr/local/sbin']" # not required. Paths to search on the remote machine for the C(shutdown) command. I(Only) these paths will be searched for the C(shutdown) command. C(PATH) is ignored in the remote node when searching for the C(shutdown) command.
    when: ansible_distribution == 'Ubuntu'  and reboot_required_file.stat.exists == true and ansible_host != "172.17.60.185" and ansible_host != "172.17.60.90"

      
